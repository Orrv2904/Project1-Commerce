"""
Django settings for commerce project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '6ps8j!crjgrxt34cqbqn7x&b3y%(fny8k8nh21+qa)%ws3fh!q'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'auctions',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Cloudinary
    'cloudinary_storage',
    'cloudinary',
    #end Cloudinary
    #newadmin
    'admin_volt.apps.AdminVoltConfig',
    'django.contrib.admin',
    #end newadmin
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'commerce.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'commerce.wsgi.application'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

AUTH_USER_MODEL = 'auctions.User'

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'den3ccjvd',
    'API_KEY': '554688635689583',
    'API_SECRET': 'adBQr8y2OHk3L6rqWKmFuQDkFy4',
    'STATICFILES_MANAGER': 'cloudinary_storage.storage.StaticHashedCloudinaryStorage',
    'STATIC_IMAGES_EXTENSIONS': ['jpg', 'jpe', 'jpeg', 'jpc', 'jp2', 'j2k', 'wdp', 'jxr', 'hdp', 'png', 'gif', 'webp', 'bmp', 'tif', 'tiff', 'ico'],
    'MAGIC_FILE_PATH': 'magic',
    'INVALID_IMAGE_PATH': 'https://res.cloudinary.com/den3ccjvd/image/upload/v1/static/images/invalid_image',
    'DEFAULT_RANGE': 'http_range',
    'IGNORE_FILENAME': False,
    'KEEP_ORIGINAL_NAME': False,
    'STATIC_IMAGES_TRANSFORMATIONS': {
        'jpg': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'jpe': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'jpeg': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'jpc': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'jp2': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'j2k': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'wdp': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'jxr': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'hdp': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'png': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'gif': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'webp': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'bmp': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'tif': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'tiff': [{'quality': 'auto:good', 'fetch_format': 'auto'}],
        'ico': [{'quality': 'auto:good', 'fetch_format': 'auto'}]
    }
}

LOGIN_REDIRECT_URL = '/'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'